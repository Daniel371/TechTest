{"version":3,"sources":["Form.js","App.js","reportWebVitals.js","index.js"],"names":["rates","menuItems","currency","symbol","rate","map","item","i","MenuItem","value","Form","props","useState","open","setOpen","convertFrom","convertTo","amount","inputs","setInputs","error","setError","total","setTotal","useRef","handleClose","handleInputChange","event","target","name","onSubmit","preventDefault","currencies","current","join","reverse","toFixed","FormControl","required","variant","InputLabel","id","Select","Boolean","label","labelId","onChange","style","minWidth","TextField","type","inputProps","min","step","FormHelperText","Button","color","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","Typography","align","fullWidth","margin","onClick","useStyles","makeStyles","form","display","flexDirection","alignItems","gap","media","maxWidth","height","App","classes","className","Card","backgroundColor","CardMedia","image","CardContent","gutterBottom","component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04c70b26.chunk.js","sourcesContent":["import React, { useState, useRef } from 'react'\r\nimport axios from 'axios'\r\nimport {\r\n\tButton,\r\n\tDialog,\r\n\tDialogContent,\r\n\tDialogTitle,\r\n\tFormControl,\r\n\tFormHelperText,\r\n\tInputLabel,\r\n\tMenuItem,\r\n\tSelect,\r\n\tTextField,\r\n\tTypography,\r\n} from '@material-ui/core'\r\n\r\n// dropdown data\r\nconst data = [\r\n\t{\r\n\t\tcurrency: 'GBP',\r\n\t\tsymbol: '£',\r\n\t},\r\n\t{\r\n\t\tcurrency: 'USD',\r\n\t\tsymbol: '$',\r\n\t},\r\n\t{\r\n\t\tcurrency: 'AUD',\r\n\t\trate: 1.2,\r\n\t\tsymbol: 'A$',\r\n\t},\r\n\t{\r\n\t\tcurrency: 'EUR',\r\n\t\tsymbol: '€',\r\n\t},\r\n]\r\n\r\nconst rates = {\r\n\t'GBP/EUR': 1.13,\r\n\t'GBP/USD': 1.37,\r\n\t'GBP/AUD': 1.79,\r\n\t'EUR/USD': 1.21,\r\n\t'EUR/AUD': 1.58,\r\n\t'USD/AUD': 1.31,\r\n}\r\n\r\n// items for dropdowns\r\nconst menuItems = data.map((item, i) => (\r\n\t<MenuItem key={i} value={item}>\r\n\t\t{item.currency}\r\n\t</MenuItem>\r\n))\r\n\r\nconst Form = props => {\r\n\t// APP STATE\r\n\tconst [open, setOpen] = useState(false)\r\n\tconst [inputs, setInputs] = useState({\r\n\t\tconvertFrom: '',\r\n\t\tconvertTo: '',\r\n\t\tamount: '',\r\n\t})\r\n\tconst [error, setError] = useState('')\r\n\tconst [total, setTotal] = useState(0)\r\n\r\n\tconst rate = useRef(0)\r\n\r\n\t// EVENT HANDLERS\r\n\tconst handleClose = () => {\r\n\t\tsetOpen(false)\r\n\t\tsetInputs({\r\n\t\t\tconvertFrom: '',\r\n\t\t\tconvertTo: '',\r\n\t\t\tamount: '',\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleInputChange = event => {\r\n\t\tsetError('')\r\n\t\tsetInputs({\r\n\t\t\t...inputs,\r\n\t\t\t[event.target.name]: event.target.value,\r\n\t\t})\r\n\t}\r\n\r\n\tconst handleSubmit = event => {\r\n\t\tevent.preventDefault()\r\n\t\tif (inputs.convertTo.currency === inputs.convertFrom.currency) {\r\n\t\t\tsetError('Convert FROM and convert TO must be different ')\r\n\t\t\treturn\r\n\t\t}\r\n\r\n\t\t// add currencies into array to make it easier to flip them round\r\n\t\tconst from = inputs.convertFrom.currency\r\n\t\tconst to = inputs.convertTo.currency\r\n\t\tlet currencies = [from, to]\r\n\t\trate.current = rates[currencies.join('/')]\r\n\r\n\t\t// if no rate is found, try keyt with currencies flipped over\r\n\t\tif (!rate.current) {\r\n\t\t\trate.current = 1 / rates[currencies.reverse().join('/')]\r\n\t\t}\r\n\r\n\t\tsetTotal((rate.current * inputs.amount).toFixed(2))\r\n\t\tsetOpen(true)\r\n\t}\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<form {...props} onSubmit={handleSubmit}>\r\n\t\t\t\t<FormControl required variant='outlined'>\r\n\t\t\t\t\t<InputLabel id='convert-from-label'>FROM</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\terror={Boolean(error)}\r\n\t\t\t\t\t\tname='convertFrom'\r\n\t\t\t\t\t\tlabel='FROM'\r\n\t\t\t\t\t\tlabelId='convert-from-label'\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={inputs.convertFrom}\r\n\t\t\t\t\t\tstyle={{ minWidth: 150 }}>\r\n\t\t\t\t\t\t{menuItems}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t<FormControl required variant='outlined'>\r\n\t\t\t\t\t<InputLabel id='convert-to-label'>TO</InputLabel>\r\n\t\t\t\t\t<Select\r\n\t\t\t\t\t\terror={Boolean(error)}\r\n\t\t\t\t\t\tname='convertTo'\r\n\t\t\t\t\t\tlabel='TO'\r\n\t\t\t\t\t\tlabelId='convert-to-label'\r\n\t\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\t\tvalue={inputs.convertTo}\r\n\t\t\t\t\t\tstyle={{ minWidth: 150 }}>\r\n\t\t\t\t\t\t{menuItems}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</FormControl>\r\n\r\n\t\t\t\t<TextField\r\n\t\t\t\t\terror={Boolean(error)}\r\n\t\t\t\t\tonChange={handleInputChange}\r\n\t\t\t\t\tlabel='Amount'\r\n\t\t\t\t\trequired\r\n\t\t\t\t\tname='amount'\r\n\t\t\t\t\tvalue={inputs.amount}\r\n\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\ttype='number'\r\n\t\t\t\t\tinputProps={{ min: 0.01, step: '0.01' }}\r\n\t\t\t\t/>\r\n\t\t\t\t{error && <FormHelperText error={true}>{error}</FormHelperText>}\r\n\r\n\t\t\t\t<Button color='primary' variant='contained' type='submit'>\r\n\t\t\t\t\tCONVERT\r\n\t\t\t\t</Button>\r\n\t\t\t</form>\r\n\t\t\t<Dialog onClose={handleClose} aria-labelledby='dialog-title' open={open}>\r\n\t\t\t\t<DialogTitle id='dialog-title' color='textSecondary'>\r\n\t\t\t\t\t{`Based on exchange rate of ${rate.current.toFixed(2)}, you will get`}\r\n\t\t\t\t</DialogTitle>\r\n\t\t\t\t<DialogContent>\r\n\t\t\t\t\t<Typography align='center' variant='h1'>\r\n\t\t\t\t\t\t{`${inputs.convertTo.symbol} ${total}`}\r\n\t\t\t\t\t</Typography>\r\n\t\t\t\t\t<br />\r\n\t\t\t\t\t<Button\r\n\t\t\t\t\t\tvariant='outlined'\r\n\t\t\t\t\t\tfullWidth\r\n\t\t\t\t\t\tstyle={{ margin: '0  auto' }}\r\n\t\t\t\t\t\tonClick={handleClose}>\r\n\t\t\t\t\t\tClose\r\n\t\t\t\t\t</Button>\r\n\t\t\t\t</DialogContent>\r\n\t\t\t</Dialog>\r\n\t\t</>\r\n\t)\r\n}\r\n\r\nexport default Form\r\n","import React from 'react'\nimport './App.css'\nimport { Card, CardContent, CardMedia, Typography } from '@material-ui/core'\nimport { makeStyles } from '@material-ui/styles'\nimport Form from './Form'\n\nconst useStyles = makeStyles({\n\tform: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\talignItems: 'center',\n\t\tgap: 24,\n\t},\n\tmedia: {\n\t\tmaxWidth: 400,\n\t\theight: 150,\n\t},\n})\n\nfunction App() {\n\tconst classes = useStyles()\n\treturn (\n\t\t<div className='App'>\n\t\t\t<Card\n\t\t\t\tclassName='Root'\n\t\t\t\tstyle={{ backgroundColor: 'rgba(255, 255, 255, 0.85)' }}>\n\t\t\t\t<CardMedia\n\t\t\t\t\tclassName={classes.media}\n\t\t\t\t\timage='https://www.nationsonline.org/gallery/World/currencies.jpg'\n\t\t\t\t/>\n\t\t\t\t<CardContent>\n\t\t\t\t\t<Typography gutterBottom variant='h4'>\n\t\t\t\t\t\tCurrency Converter\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<Typography variant='h5' color='textSecondary' component='p'>\n\t\t\t\t\t\tConvert currency for <b>GBP</b>, <b>USD</b>, <b>AUD</b> and{' '}\n\t\t\t\t\t\t<b>EUR</b>\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<br />\n\t\t\t\t\t<Form className={classes.form} />\n\t\t\t\t</CardContent>\n\t\t\t</Card>\n\t\t</div>\n\t)\n}\n\nexport default App\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\nreportWebVitals()\n"],"sourceRoot":""}